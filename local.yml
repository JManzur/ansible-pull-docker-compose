---
- name: Install Docker, Docker Compose, and run docker-compose
  hosts: localhost
  become: yes
  vars:
    schedule:
      repository: https://github.com/JManzur/ansible-pull-docker-compose.git
      service: /etc/systemd/system/ansible-pull.service
      timer: /etc/systemd/system/ansible-pull.timer
      interval_in_minutes: 2
    packages:
      - unzip
      - curl
      - jq

  tasks:
    - name: Install Docker
      ansible.builtin.shell: |
        curl -fsSL https://get.docker.com | sh

    - name: Install Docker Compose
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.38.2/docker-compose-linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: "0755"

    - name: Verify Docker installation
      shell: docker --version
      register: docker_version

    - name: Verify Docker Compose installation
      shell: docker-compose --version
      register: docker_compose_version
   
    - name: Install APT packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop: "{{ packages }}"

    - name: Check if AWS CLI is installed
      ansible.builtin.command: aws --version
      register: aws_cli_version
      changed_when: false
      failed_when: false

    - name: Install AWS CLI
      ansible.builtin.shell: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip /opt/ansible-pull/awscliv2.zip
        sudo /opt/ansible-pull/aws/install
      when: aws_cli_version.rc != 0

    - name: Check if Oh-My-Bash is installed
      ansible.builtin.stat:
        path: /root/.oh-my-bash
      register: omb_dir
      changed_when: false 

    - name: Install Oh-My-Bash
      ansible.builtin.shell: |
        bash -c "$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)"
      when: not omb_dir.stat.exists

    - name: Run docker-compose
      community.docker.docker_compose_v2:
        project_src: /opt/ansible-pull
        recreate: auto

    - name: Install ansible-pull.service
      copy:
        dest: "{{ schedule.service }}"
        mode: "0644"
        content: |
          [Unit]
          Description=Run ansible-pull to update and apply playbook
          After=network-online.target
          Wants=network-online.target

          [Service]
          Type=oneshot
          User=root
          WorkingDirectory=/opt/ansible-pull
          ExecStart=/usr/bin/ansible-pull -o -U {{ schedule.repository }} -d /opt/ansible-pull
          TimeoutStartSec=infinity
      notify: reload systemd

    - name: Install ansible-pull.timer
      copy:
        dest: "{{ schedule.timer }}"
        mode: "0644"
        content: |
          [Unit]
          Description=Run ansible-pull every {{ schedule.interval_in_minutes }} minutes

          [Timer]
          OnCalendar=*:0/{{ schedule.interval_in_minutes }}
          Persistent=true

          [Install]
          WantedBy=timers.target
      notify: reload systemd

    - name: Enable & start ansible-pull.timer
      systemd:
        name: ansible-pull.timer
        enabled: true
        state: started
        daemon_reload: true

  handlers:
    - name: reload systemd
      command: systemctl daemon-reload
      become: yes